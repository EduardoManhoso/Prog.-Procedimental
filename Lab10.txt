// Exercicio 02
#include <stdio.h>
#include <stdlib.h>

main(){
    int *vet;
    int i;
    int tam;
    printf("Digite o tamanho do vetor: ");
    scanf("%d", &tam);
    vet = (int*) malloc(tam * sizeof(int));
    for(i = 0; i < tam; i++){
        printf("Digite o valor da posicao %d: ", i);
        scanf("%d", &*(vet + i));
    }
    for(i = 0; i < tam; i++){
        printf("%d%c ", *(vet + i), (i == tam - 1) ? '.' : ',');
    }
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercicio 04
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

main(){
    char *str;
    int tam;
    int i;
    printf("Digite o tamanho da string: ");
    scanf("%d", &tam);
    str = (char *) malloc(tam * sizeof(char));
    printf("Digite a string: ");
    fflush(stdin);
    fgets(str, tam, stdin);
    for(i = 0; i < strlen(str); i++){
        while(*(str + i) == 'a' || *(str + i) == 'e' || *(str + i) == 'i' || *(str + i) == 'o' || *(str + i) == 'u')
            i++;
        printf("%c", *(str + i));
    }
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercicio 06
#include <stdio.h>
#include <stdlib.h>

main(){
    int *vet;
    int tam, op = 0, valor, posi;
    printf("Digite o tamanho da memoria: ");
    scanf("%d", &tam);
    vet = (int *) calloc(tam, sizeof(int));
    while (tam){
        printf("\nDigite qual das opcoes vai realizar:\n1-inserir um valor em uma determinada posicao;\n2-consultar o valor contido em uma determinada posicao;\n3-SAIR\n");
        scanf("%d", &op);
        if (op == 3)
            break;
        switch (op){
            case 1:
                printf("\nDigite um valor: ");
                scanf("%d", &valor);
                printf("Em qual posicao de 0 a %d vai ser colocada: ", tam - 1);
                scanf("%d", &posi);
                *(vet + posi) = valor;
                break;
            case 2:
                printf("\nQual posicao de 0 a %d vai consultar: ", tam - 1);
                scanf("%d", &posi);
                printf("Valor = %d\n", *(vet + posi));
                break;
        }
        
    }
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercicio 08
#include <stdio.h>
#include <stdlib.h>

main(){
    int *vet;
    int i;
    int cont = 0;
    vet = (int *) calloc(1500, sizeof(int));
    for(i = 0; i < 1500; i++){
        if(*(vet + i) == 0)
            cont++;
    }
    printf("Tem %d numeros 0.\n", cont);
    for(i = 0; i < 1500; i++){
        *(vet + i) = i;
    }
    for(i = 0; i < 10; i++){
        printf("%d ", *(vet + i));
    }
    puts("\n");
    for(i = 1500 - 1; i > (1500 - 10); i--){
        printf("%4d ", *(vet + i));
    }
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercicio 10
#include <stdio.h>
#include <stdlib.h>
#include <time.h>

main(){
    double *vet;
    int tam;
    int i;
    printf("Digite o tamanho do vetor(maior ou igual a 10): ");
    scanf("%d", &tam);
    while(tam < 10){
        printf("Tamanho invalido.\n");
        printf("Digite o tamanho do vetor(maior ou igual a 10): ");
        scanf("%d", &tam);
    }
    vet = (double *) malloc(tam * sizeof(double));
    for(i = 0; i < 10; i++){
        *(vet + i) = ((double)rand() * 101) / (double)RAND_MAX;
    }
    for(i = 0; i < 10; i++){
        printf("%f%c ", *(vet + i), (i == 9) ? '.' : ',');
    }
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercicio 12
#include <stdio.h>
#include <stdlib.h>

struct produto{
    int codigo;
    int disp;
    float valor;
    char nome[50];
};

main(){
    struct produto *p;
    int tam;
    int i;
    int maior = 0, prod;
    printf("Digite a quantidade de produtos: ");
    scanf("%d", &tam);
    p = (struct produto *) malloc(tam * sizeof(struct produto));
    for(i = 0; i < tam; i++){
        printf("Digite o codigo do produto: ");
        scanf("%d", &(p + i)->codigo);
        printf("Digite o nome do produto: ");
        fflush(stdin);
        fgets((p + i)->nome, 50, stdin);
        fflush(stdin);
        printf("Digite a quantidade do produto: ");
        scanf("%d", &(p + i)->disp);
        printf("Digite o preco do produto: ");
        scanf("%f", &(p + i)->valor);
        puts("\n");
    }
    
    for(i = 0; i < tam; i++){
        if(maior < (p + i)->valor){
            maior = (p + i)->valor;
            prod = i;
        }
    }
    printf("Produto de maior valor:\n");
    printf("Codigo: %d\n", (p + prod)->codigo);
    printf("Nome: %s\n", (p + prod)->nome);
    printf("Estoque: %d\n", (p + prod)->disp);
    printf("Valor: %.2f\n", (p + prod)->valor);

    maior = 0;
    for (i = 0; i < tam; i++){
        if (maior < (p + i)->disp){
            maior = (p + i)->disp;
            prod = i;
        }
    }
    printf("\nProduto de maior estoque:\n");
    printf("Codigo: %d\n", (p + prod)->codigo);
    printf("Nome: %s\n", (p + prod)->nome);
    printf("Estoque: %d\n", (p + prod)->disp);
    printf("Valor: %.2f\n", (p + prod)->valor);
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercicio 14
#include <stdio.h>
#include <stdlib.h>

main(){
    int *mat;
    int linha, coluna;
    int i, j;
    printf("Digite o numero de linhas da matriz: ");
    scanf("%d", &linha);
    printf("Digite o numero de colunas da matriz: ");
    scanf("%d", &coluna);
    mat = (int *) malloc(linha * coluna * sizeof(int));
    
    for(i = 0; i < linha; i++){
        for(j = 0; j < coluna; j++){
            printf("Digite um valor: ");
            scanf("%d", &mat[(i * coluna) + j]);
        }
    }

    for(i = 0; i < linha; i++){
        for(j = 0; j < coluna; j++){
            printf("%5d ", mat[(i * coluna) + j]);
        }
        puts("\n");
    }
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercicio 16
#include <stdio.h>
#include <stdlib.h>

main(){
    int *mat, *tran;
    int linha, coluna;
    int i, j;
    printf("Digite o numero de linhas da matriz: ");
    scanf("%d", &linha);
    printf("Digite o numero de colunas da matriz: ");
    scanf("%d", &coluna);
    mat = (int *) malloc(linha * coluna * sizeof(int));
    tran = (int *)malloc(linha * coluna * sizeof(int));

    for (i = 0; i < linha; i++){
        for(j = 0; j < coluna; j++){
            printf("Digite um valor: ");
            scanf("%d", &mat[(i * coluna) + j]);
        }
    }

    for (i = 0; i < coluna; i++){
        for(j = 0; j < linha; j++){
            tran[(i * linha) + j] = mat[(j * coluna) + i];
        }
    }

    printf("Matriz:\n");
    for(i = 0; i < linha; i++){
        for(j = 0; j < coluna; j++){
            printf("%5d ", mat[(i * coluna) + j]);
        }
        puts("\n");
    }

    printf("Matriz transposta:\n");
    for(i = 0; i < coluna; i++){
        for(j = 0; j < linha; j++){
            printf("%5d ", tran[(i * linha) + j]);
        }
        puts("\n");
    }
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercicio 18
#include <stdlib.h>

struct registro{
    char nome[30];
    int cod;
    float valor;
}

main(){
    struct registro *r;
    int *vet, **mat;
    char **texto;
    vet = (int *) malloc(1024);
    mat = (int *) malloc(10 * sizeof(int *));
    for(int i = 0; i < 10; i++)
        mat[i] = (int *) malloc(10 * sizeof(int));
    r = (struct registro *) malloc(50 * sizeof(struct registro));
    texto = (char *) malloc(100 * sizeof(char *));
    for(int i = 0; i < 100; i++)
        texto[i] = (char *) malloc(80 * sizeof(char));
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercicio 20
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

struct cidade{
    char nome[50];
    int x, y;
}

main(){
    struct cidade *c;
    int n, num1, num2;
    int i, j;
    printf("Digite a quantidade de cidades: ");
    scanf("%d", &n);
    c = (struct cidade *) malloc(n * sizeof(struct cidade));
    for(i = 0; i < n; i++){
        printf("Digite o nome da cidade: ");
        fflush(stdin);
        fgets((c + i)->nome, 50, stdin);
        printf("Digite as coordenadas: ");
        scanf("%d %d", &(c + i)->x, &(c + i)->y);
    }
    
    float mat[n][n];
    for(i = 0; i < n; i++){
        for(j = 0; j < n; j++){
            mat[i][j] = sqrt(pow(((c + i)->x - (c + j)->x), 2) - pow(((c + i)->y - (c + j)->y), 2));
        }
    }

    for(i = 0; i < n; i++){
        for(j = 0; j < n; j++){
            printf("%.2f    ", mat[i][j]);
        }
        puts("\n");
    }

    printf("Digite o numero de duas cidades: ");
    scanf("%d %d", &num1, &num2);
    printf("A distancia entre as duas cidades e de %.2f", mat[num1][num2]);
}