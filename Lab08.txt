// Exercício 01

struct horario{
    int horas, minutos segundos;
};

struct data{
    int dia, mes, ano;
};

struct compromisso{
    struct data d;
    struct horario h;
    char desc[1000];
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercício 02
#include <stdio.h>

#define IND 1000

struct dados{
    char nome[IND];
    int idade;
    char end[IND];
};

main(){
    struct dados d;
    printf("Digite o seu nome: ");
    gets(d.nome);
    printf("Digite a sua idade: ");
    scanf("%i", &d.idade);
    fflush(stdin);
    printf("Digite o seu endereco: ");
    gets(d.end);
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercício 03
#include <stdio.h>

struct aluno{
    char nome[100];
    long int matricula;
    char curso[100];
};

main(){
    struct aluno a[5];
    int i;
    for(i = 0; i < 5; i++){
        printf("Digite o nome: ");
        gets(a[i].nome);
        printf("Digite o numero de matricula: ");
        scanf("%li", &a[i].matricula);
        printf("Digite o curso: ");
        fflush(stdin);
        gets(a[i].curso);
        fflush(stdin);
    }
    for(i = 0; i < 5; i++){
        printf("Nome: %s\n", a[i].nome);
        printf("Matricula: %li\n", a[i].matricula);
        printf("Curso: %s\n\n", a[i].curso);
    }
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercício 04
#include <stdio.h>

struct aluno{
    long int matricula;
    char nome[100];
    float p1, p2, p3;
};

main(){
    struct aluno a[5];
    int i;
    float media, maior, menor, maiorp1;
    int amenor, amaior, amaiorp1;
    for(i = 0; i < 5; i++){
        printf("Digite o numero de matricula: ");
        scanf("%li", &a[i].matricula);
        fflush(stdin);
        printf("Digite o Nome do aluno: ");
        gets(a[i].nome);
        printf("Digite a nota da primeira prova: ");
        scanf("%f", &a[i].p1);
        printf("Digite a nota da segunda prova: ");
        scanf("%f", &a[i].p2);
        printf("Digite a nota da terceira prova: ");
        scanf("%f", &a[i].p3);
    }
    for(i = 0; i < 5; i++){
        media = (a[i].p1 + a[i].p2 + a[i].p3) / 3.0;
        if(i == 0){
            maior = media;
            menor = media;
            amaior = i;
            amenor = i;
            maiorp1 = a[i].p1;
            amaiorp1 = i;
        }
        else if(media > maior){
            maior = media;
            amaior = i;
        }
        else if(media < menor){
            menor = media;
            amenor = i;
        }
        if(a[i].p1 > maiorp1){
            maiorp1 = a[i].p1;
            amaiorp1 = i;
        }
    }
    printf("Aluno com maior nota na prova 1: %s.\n", a[amaiorp1].nome);
    printf("Aluno com maior media: %s.\n", a[amaior].nome);
    printf("Aluno com menor media: %s.\n\n", a[amenor].nome);
    for (i = 0; i < 5; i++){
        media = (a[i].p1 + a[i].p2 + a[i].p3) / 3.0;
        if(media >= 6.0){
            printf("Aluno %s, aprovado.\n\n", a[i].nome);
        }
        else{
            printf("Aluno %s, reprovado.\n\n", a[i].nome);
        }
    }
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercício 05
#include <stdio.h>

struct vetor{
    float a;
    float b;
    float c;
};

main(){
    struct vetor vet[2];
    int i;
    float soma_a = 0, soma_b = 0, soma_c = 0;
    for(i = 0; i < 2; i++){
        printf("Digite a coordenada x: ");
        scanf("%f", &vet[i].a);
        printf("Digite a coordenada y: ");
        scanf("%f", &vet[i].b);
        printf("Digite a coordenada z: ");
        scanf("%f", &vet[i].c);
    }
    for(i = 0; i < 2; i++){
        soma_a += vet[i].a;
        soma_b += vet[i].b;
        soma_c += vet[i].c;
    }
    printf("A soma dos dois vetores e: (%.2f, %.2f, %.2f)", soma_a, soma_b, soma_c);
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercício 06
#include <stdio.h>

struct funcionario{
    char nome[100];
    int idade;
    char sexo;
    char cpf[20];
    int dia, mes, ano;
    int setor;
    char cargo[30];
    float salario;
};

main(){
    struct funcionario f;
    printf("Digite o nome do funcionario: ");
    gets(f.nome);
    printf("Digite a idade do funcionario: ");
    scanf("%i", &f.idade);
    printf("Digite o sexo do funcionario (M/F): ");
    scanf(" %c", &f.sexo);
    printf("Digite o CPF do funcionario: ");
    fflush(stdin);
    gets(f.cpf);
    printf("Digite a data de nascimento do funcionario (xx/xx/xxxx): ");
    scanf("%i/%i/%i", &f.dia, &f.mes, &f.ano);
    printf("Digite o setor onde trabalha o funcionario: ");
    scanf("%i", &f.setor);
    while(f.setor < 0 || f.setor > 99){
        printf("Setor invalido!\n");
        printf("Digite o setor onde trabalha o funcionario: ");
        scanf("%i", &f.setor);
    }
    printf("Digite o cargo do funcionario: ");
    fflush(stdin);
    gets(f.cargo);
    printf("Digite o salario do funcionario: ");
    scanf("%f", &f.salario);
    printf("\nNome: %s\n", f.nome);
    printf("Idade: %i\n", f.idade);
    printf("Sexo: %c\n", f.sexo);
    printf("CPF: %s\n", f.cpf);
    printf("Data de nascimento: %i/%i/%i\n", f.dia, f.mes, f.ano);
    printf("Codigo do setor: %i\n", f.setor);
    printf("Cargo: %s\n", f.cargo);
    printf("Salario: %.2f\n", f.salario);
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercício 07
#include <stdio.h>
#include <string.h>

#define IND 200
#define QNT 5

struct dados{
    char nome[IND];
    char end[IND];
    char telefone[IND];
};

main(){
    struct dados d[QNT];
    int i, j;
    int ordem[QNT], cont;
    for(i = 0; i < QNT; i++){
        printf("Digite o nome: ");
        fflush(stdin);
        gets(d[i].nome);
        printf("Digite o endereco: ");
        fflush(stdin);
        gets(d[i].end);
        printf("Digite o telefone: ");
        fflush(stdin);
        gets(d[i].telefone);
    }
    for(i = 0; i < QNT; i++){
        cont = 0;
        for(j = 0; j < QNT; j++){
            if(strcmp(strupr(d[i].nome), strupr(d[j].nome)) < 0)
                cont++;
        }
        ordem[i] = QNT - cont;
    }
    for(i = 0; i < QNT; i++){
        for(j = 0; j < QNT; j++){
            if(ordem[j] == i + 1){
                printf("\nNome: %s\n", d[j].nome);
                printf("Endereco: %s\n", d[j].end);
                printf("Telefone: %s\n", d[j].telefone);
            }
        }
    }
}

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercicio 08
#include <stdio.h>
#include <stdlib.h>

#define CRD 3
#define JOG 2

struct cartas{
    int valor[CRD];
    int naipe[CRD];
};

main(){
    struct cartas c[JOG];
    int i, j, k, l;
    for(i = 0; i < JOG; i++){
        for (j = 0; j < CRD; j++){
            c[i].valor[j] = rand() % 13 + 1;
            c[i].naipe[j] = rand() % 4;
            for (k = 0; k < i; k++){
                for (l = 0; l < j; l++){
                    if (c[k].valor[l] == c[i].valor[j] && c[k].naipe[l] == c[i].naipe[j]){
                        j--;
                        goto jump;
                    }
                }
            }
            jump:
            }
    }
    for(i = 0; i < JOG; i++){
        for(j = 0; j < CRD; j++){
            if (c[i].valor[j] == 1){
                if (c[i].naipe[j] == 0){
                    printf("As de paus\n");
                }
                else if (c[i].naipe[j] == 1){
                    printf("As de ouros\n");
                }
                else if (c[i].naipe[j] == 2){
                    printf("As de copas\n");
                }
                else if (c[i].naipe[j] == 3){
                    printf("As de espadas\n");
                }
            }
            else if (c[i].valor[j] == 11){
                if (c[i].naipe[j] == 0){
                    printf("Valete de paus\n");
                }
                else if (c[i].naipe[j] == 1){
                    printf("Valete de ouros\n");
                }
                else if (c[i].naipe[j] == 2){
                    printf("Valete de copas\n");
                }
                else if (c[i].naipe[j] == 3){
                    printf("Valete de espadas\n");
                }
            }
            else if (c[i].valor[j] == 12){
                if (c[i].naipe[j] == 0){
                    printf("Dama de paus\n");
                }
                else if (c[i].naipe[j] == 1){
                    printf("Dama de ouros\n");
                }
                else if (c[i].naipe[j] == 2){
                    printf("Dama de copas\n");
                }
                else if (c[i].naipe[j] == 3){
                    printf("Dama de espadas\n");
                }
            }
            else if (c[i].valor[j] == 13){
                if (c[i].naipe[j] == 0){
                    printf("Rei de paus\n");
                }
                else if (c[i].naipe[j] == 1){
                    printf("Rei de ouros\n");
                }
                else if (c[i].naipe[j] == 2){
                    printf("Rei de copas\n");
                }
                else if (c[i].naipe[j] == 3){
                    printf("Rei de espadas\n");
                }
            }
            else{
                if (c[i].naipe[j] == 0){
                    printf("%i de paus\n", c[i].valor[j]);
                }
                else if (c[i].naipe[j] == 1){
                    printf("%i de ouros\n", c[i].valor[j]);
                }
                else if (c[i].naipe[j] == 2){
                    printf("%i de copas\n", c[i].valor[j]);
                }
                else if (c[i].naipe[j] == 3){
                    printf("%i de espadas\n", c[i].valor[j]);
                }
            }
        }
        printf("\n");
    }
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercicio 09
#include <stdio.h>

struct carro{
    char marca[15];
    int ano;
    float preco;
};

main(){
    struct carro c[5];
    int i;
    float valor;
    for(i = 0; i < 5; i++){
        printf("Digite a marca do carro: ");
        fflush(stdin);
        gets(c[i].marca);
        printf("Digite o ano do carro: ");
        scanf("%i", &c[i].ano);
        printf("Digite o preco do carro: ");
        scanf("%f", &c[i].preco);
    }
    do{
        printf("Digite um valor maximo: ");
        scanf("%f", &valor);
        if(valor == 0)
            break;
        for(i = 0; i < 5; i++){
            if(c[i].preco < valor){
                printf("\nModelo: %s\n", c[i].marca);
                printf("Ano: %i\n", c[i].ano);
                printf("Preco: %.2f\n", c[i].preco);
            }
        }
    }while(valor);
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercicio 10
#include <stdio.h>
#include <string.h>

struct livro{
    char titulo[30];
    char autor[15];
    int ano;
};

main(){
    struct livro l[5];
    int i, j;
    char busca[30];
    int tam, cont;
    for(i = 0; i < 5; i++){
        printf("Digite o titulo do livro: ");
        fflush(stdin);
        fgets(l[i].titulo, 30, stdin);
        printf("Digite o autor do livro: ");
        fflush(stdin);
        fgets(l[i].autor, 15, stdin);
        printf("Digite o ano de lancamento: ");
        scanf("%i", &l[i].ano);
    }
    printf("Digite o titulo do livro procurado: ");
    fflush(stdin);
    fgets(busca, 30, stdin);
    tam = strlen(busca);
    for(i = 0; i < 5; i++){
        cont = 0;
        for(j = 0; j < tam; j++){
            if(busca[j] == l[i].titulo[j]){
                cont++;
            }
        }
        if(cont == tam){
            printf("\nTitulo: %s", l[i].titulo);
            printf("Autor: %s", l[i].autor);
            printf("Ano: %i", l[i].ano);
    }
    }
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercicio 11
#include <stdio.h>

#define IND 5

struct compromisso{
    char comp[60];
};

struct data{
    int dia, mes, ano;
};

main(){
    struct compromisso c[IND];
    struct data d[IND];
    int i;
    int m, a;
    for(i = 0; i < IND; i++){
        printf("Digite o compromisso: ");
        fflush(stdin);
        fgets(c[i].comp, 60, stdin);
        printf("Digite a data do compromisso: ");
        scanf("%i/%i/%i", &d[i].dia, &d[i].mes, &d[i].ano);
    }
    do{
        printf("Digite o mes: ");
        scanf("%i", &m);
        if(!m)
            break;
        printf("Digite o ano: ");
        scanf("%i", &a);
        for(i = 0; i < IND; i++){
            if(m == d[i].mes && a == d[i].ano){
                printf("Data: %i/%i/%i  - %s", d[i].dia, d[i].mes, d[i].ano, c[i].comp);
            }
        }
    }while(m);
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercicio 12
#include <stdio.h>

#define IND 5

struct consumo{
    char nome[15];
    float potencia, tempo;
};

main(){
    struct consumo c[IND];
    int i;
    int t;
    float equip, total = 0;
    for(i = 0; i < IND; i++){
        printf("Digite o nome do eletrodomestico: ");
        fflush(stdin);
        fgets(c[i].nome, 15, stdin);
        printf("Digite a potencia do eletrodomestico em Kw: ");
        scanf("%f", &c[i].potencia);
        printf("Digite as horas ativo no dia: ");
        scanf("%f", &c[i].tempo);
    }
    printf("Digite os dias de uso: ");
    scanf("%i", &t);
    for(i = 0; i < IND; i++){
        equip = c[i].potencia * c[i].tempo * t;
        total += equip;
    }
	for(i = 0; i < IND; i++){
		equip = c[i].potencia * c[i].tempo * t;
		printf("Eletrodomestico %s%.2f%%\n", c[i].nome, (equip / total) * 100);
	}
    printf("\nConsumo total foi de %.2f Kwh", total);
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercicio 13
#include <stdio.h>

#define IND 5

struct produtos{
    char  nome[15];
    long unsigned codigo;
    float preco;
    int estoque;
};

main(){
    struct produtos p[IND];
    int i;
    long unsigned cod;
    int quant, cont;
    for(i = 0; i < IND; i++){
        printf("Digite o codigo do produto: ");
        scanf("%lu", &p[i].codigo);
        printf("Digite o nome do produto: ");
        fflush(stdin);
        fgets(p[i].nome, 15, stdin);
        printf("Digite o preco do produto: ");
        scanf("%f", &p[i].preco);
        printf("Digite a quantidade em estoque: ");
        scanf("%i", &p[i].estoque);
    }
    do{
        printf("\nDigite o codigo do produto no pedido: ");
        scanf("%lu", &cod);
        if(!cod)
            break;
        printf("Digite a quantidade do produto no pedido: ");
        scanf("%i", &quant);
        cont = 0;
        for(i = 0; i < IND; i++){
            if (cod == p[i].codigo && quant <= p[i].estoque){
                cont++;
                p[i].estoque -= quant; 
            }
            else if (cod == p[i].codigo && quant > p[i].estoque){
                cont++;
                printf("\nNao tem a quantidade suficiente no estoque.\n");
            }  
        }
        if(!cont){
                printf("\nCodigo invalido.\n");
            }
        for(i = 0; i < IND; i++){
            printf("\nCodigo: %lu\n", p[i].codigo);
            printf("Nome: %s", p[i].nome);
            printf("Preco: %.2f\n", p[i].preco);
            printf("Estoque: %i\n", p[i].estoque);
        }
    }while(cod);
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercicio 17
#include <stdio.h>
#include <string.h>

#define IND 5

struct endereco{
    char rua[100], bairro[100], cidade[100], estado[100], cep[100];
};

struct cadastro{
    char nome[100], cpf[100], estado_civil[100], sexo, identidade[100], telefone[100];
    float salario;
    int idade;
    struct endereco end;
};

main(){
    struct cadastro c[IND];
    int i;
    int maior = 0, x;
    char busca[100];
    for(i = 0; i < IND; i++){
        printf("Digite o seu nome: ");
        fflush(stdin);
        gets(c[i].nome);
        printf("Digite a sua rua: ");
        fflush(stdin);
        gets(c[i].end.rua);
        printf("Digite o seu bairro:");
        fflush(stdin);
        gets(c[i].end.bairro);
        printf("Digite o sua cidade:");
        fflush(stdin);
        gets(c[i].end.cidade);
        printf("Digite o seu estado:");
        fflush(stdin);
        gets(c[i].end.estado);
        printf("Digite o seu CEP:");
        fflush(stdin);
        gets(c[i].end.cep);
        printf("Digite o seu CPF: ");
        fflush(stdin);
        gets(c[i].cpf);
        printf("Digite o seu estado civil: ");
        fflush(stdin);
        gets(c[i].estado_civil);
        printf("Digite o seu sexo(M/F): ");
        scanf(" %c", &c[i].sexo);
        printf("Digite o sua identidade: ");
        fflush(stdin);
        gets(c[i].identidade);
        printf("Digite o seu telefone: ");
        fflush(stdin);
        gets(c[i].telefone);
        printf("Digite o sua idade: ");
        scanf("%i", &c[i].idade);
        printf("Digite o seu salario: ");
        scanf("%f", &c[i].salario);
        printf("\n");
    }
    printf("\n\n");
    for(i = 0; i < IND; i++){
        if(c[i].idade > maior){
            maior = c[i].idade;
            x = i;
        }
        if(c[i].salario > 1000.0){
            printf("%s com salario de %.2f.\n", c[i].nome, c[i].salario);
        }
         if(c[i].sexo == 'M' || c[i].sexo == 'm'){
            printf("%s e do sexo masculino.\n", c[i].nome);
        }
    }
    printf("%s tem a maior idade, que e de %i anos.\n\n", c[x].nome, maior);
    printf("Digite a identidade que quer buscar: ");
    fflush(stdin);
    gets(busca);
    printf("\n");
    for(i = 0; i< IND; i++){
        if(!(strcmp(c[i].identidade, busca))){
            printf("\nNome: %s\n", c[i].nome);
            printf("Rua: %s\n", c[i].end.rua);
            printf("Bairro: %s\n", c[i].end.bairro);
            printf("Cidade: %s\n", c[i].end.cidade);
            printf("Estado: %s\n", c[i].end.estado);
            printf("CEP: %s\n", c[i].end.cep);
            printf("Identidade: %s\n", c[i].identidade);
            printf("CPF: %s\n", c[i].cpf);
            printf("Estado Civil: %s\n", c[i].estado_civil);
            printf("Telefone: %s\n", c[i].telefone);
            printf("Idade: %i\n", c[i].idade);
            printf("Sexo: %c\n", c[i].sexo);
            printf("Salario: %.2f\n", c[i].salario);
        }
    }
}



















