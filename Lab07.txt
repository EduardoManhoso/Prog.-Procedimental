// Exercício 01
#include <stdio.h>
#include <string.h>
#define IDN 100

main(){
    char str[IDN];
    printf("Digite uma frase: ");
    fgets(str, IDN, stdin);
    printf("Voce digitou: %s", str);
}
---------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercício 02
#include <stdio.h>
#include <string.h>
#define IDN 100

main(){
    char str[IDN];
    int cont;
    printf("Digite uma sequencia de numeros: ");
    fgets(str, IDN, stdin);
    for(int i = 0; i < strlen(str); i++){
        if(str[i] == '1')
            cont++;
    }
    printf("O numero de 1's que apareceu foi de %i", cont);
}
---------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercício 03
#include <stdio.h>
#include <string.h>
#define IDN 100

main(){
    char str1[IDN], str2[IDN];
    int i, j;
    printf("Digite uma palavra: ");
    fgets(str1, IDN, stdin);
    for(i = strlen(str1) - 1, j = 0; i >= 0 ; i--, j++){
        str2[j] = str1[i];
    }
    printf("De tras-para frente fica: %s", str2);
}
---------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercício 04
#include <stdio.h>
#include <string.h>
#define IDN 100

main(){
    char str[IDN];
    char sub;
    int i;
    int tam, cont;
    printf("Digite uma palavra: ");
    fgets(str, IDN, stdin);
    tam = strlen(str);
    for(i = 0; i < tam; i++){
        if (str[i] == 'a' || str[i] == 'e' || str[i] == 'i' || str[i] == 'o' || str[i] == 'u' || str[i] == 'A' || str[i] == 'E' || str[i] == 'I' || str[i] == 'O' || str[i] == 'U')
            cont++;
    }
    printf("A palavra possue %i vogais.\n", cont);
    printf("Digite por qual caracter quer substituir todas elas: ");
    scanf("%c", &sub);
    for (i = 0; i < tam; i++){
        if (str[i] == 'a' || str[i] == 'e' || str[i] == 'i' || str[i] == 'o' || str[i] == 'u' || str[i] == 'A' || str[i] == 'E' || str[i] == 'I' || str[i] == 'O' || str[i] == 'U')
            str[i] = sub;
    }
    printf("A palavra fica: %s", str);
}
---------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercício 05
#include <stdio.h>
#include <string.h>
#define IDN 100

main(){
    char str[IDN];
    int i;
    int tam;
    printf("Digite uma frase: ");
    fgets(str, IDN, stdin);
    tam = strlen(str);
    for(i = 0; i < tam; i++){
        if(str[i] >= 65 && str[i] <= 90)
            str[i] = str[i] + 32;
    }
    printf("A palavra fica: %s", str);
}
---------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercício 06
#include <stdio.h>
#include <string.h>
#define IDN 100

main(){
    char str[IDN];
    int i;
    int tam;
    printf("Digite uma frase: ");
    fgets(str, IDN, stdin);
    tam = strlen(str);
    for(i = 0; i < tam; i++){
        if(str[i] >= 97 && str[i] <= 122)
            str[i] = str[i] - 32;
    }
    printf("A palavra fica: %s", str);
}
---------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercício 07
#include <stdio.h>
#include <string.h>
#define IND 100

main(){
    char str[IND];
    int i, j;
    int tam;
    printf("Digite uma frase: ");
    fgets(str, IND, stdin);
    tam = strlen(str);
    for(i = j = 0; str[i] != '\0'; i++){
        if(str[i] != ' ')
            str[j++] = str[i];
    }
    str[j] = '\0';
    printf("A palavra fica: %s", str);
}
---------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercício 08
#include <stdio.h>
#include <string.h>
#define IND 100

void troca_letra(char str[IND], char let1, char let2);

main(){
    char str[IND];
    char let1, let2;
    int i;
    printf("Digite uma frase: ");
    fgets(str, IND, stdin);
    printf("Digite a letra que vai ser substituida: ");
    scanf(" %c", &let1);
    printf("Digite qual letra vai ser usada na troca: ");
    scanf(" %c", &let2);
    troca_letra(str, let1, let2);
}

void troca_letra(char str[IND], char let1, char let2){
    for(int i = 0; str[i] != '\0'; i++){
        if(str[i] == let1)
            str[i] = let2;
    }
    printf("A frase fica: %s", str);
}
---------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercício 09
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#define IND 25
#define QNT 5

void modelo_eco(char carro[QNT][IND], char consumo[IND]);

void mil_km(char carro[QNT][IND], char consumo[IND]);

main(){
    char carro[QNT][IND], consumo[IND];
    int i, j;
    for(i = 0; i < QNT; i++){
        printf("Digite o nome do carro: ");
        fgets(carro[i], IND, stdin);
    }
    printf("Digite o consumo em km/l em ondem (separados por espaco): ");
    fgets(consumo, IND, stdin);
    modelo_eco(carro, consumo);
    mil_km(carro, consumo);
}

void modelo_eco(char carro[QNT][IND], char consumo[IND]){
    char eco[IND];
    float km, km1;
    int posicao, cont = 0, j;
    int i;
    for(i = j = 0; consumo[i] != '\0'; i++){
        if (consumo[i] >= 48 && consumo[i] <= 57){
            eco[j++] = consumo[i];
        }else{
            eco[j] = '\0';
            km = atof(eco);
            j = 0;
            cont++;
            if(cont == 1){
                km1 = km;
                posicao = cont;
            }else if(km < km1){
                km1 = km;
                posicao = cont;
            }
        }
    }
    printf("O carro mais economico e %s\n", carro[posicao - 1]);
    return;
}

void mil_km(char carro[QNT][IND], char consumo[IND]){
    int i = 0, l = 0;
    int j = 0;
    char km_l[IND];
    float km, litro;
    for(l = 0; l < QNT; l++){
        for (; consumo[i] != '\0'; i++){
            if (consumo[i] >= 48 && consumo[i] <= 57){
                km_l[j++] = consumo[i];
            }
            else{
                km_l[j] = '\n';
                km = atof(km_l);
                litro = 1000.0 / km;
                j = 0;
                i++;
                break;
            }
        }
    printf("O carro %sFaz %.2f litro(s) em 1000 km.\n", carro[l], litro);
    }
    return;
}
---------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercício 10
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#define IND 100

main(){
    char produto[IND], preco[IND], nome[IND];
    float valor, desc = 0.1, avista;
    int t, j = 0;
    int i;
    printf("Digite o nome e o valor do produto: ");
    fgets(produto, IND, stdin);
    t = strlen(produto);
    for(i = 0; i < t; i++){
        if(produto[i] >= 48 && produto[i] <= 57){
            preco[j++] = produto[i];
        }else{
            preco[j] = '\0';
            valor = atof(preco);
            avista = valor - (valor * desc);
        }
    }
    for (i = j = 0; i < t; i++){
        if (!(produto[i] >= 48 && produto[i] <= 57)){
            nome[j++] = produto[i];
        }else{
            nome[j] = '\0';
        }
    }
    printf("O produto %sEsta por R$ %.2f, com descondo de %.0f%%, fica R$ %.2f a vista.", nome, valor, desc * 100, avista);
}
---------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercício 11
#include <stdio.h>
#include <string.h>
#define IND 100

main(){
    char s[IND];
    int i;
    int comeco, fim;
    printf("Digite uma frase: ");
    fgets(s, IND, stdin);
    printf("Digite onde o segmento comeca e termina: ");
    scanf("%i %i", &comeco, &fim);
    for(i = comeco; i <= fim; i++){
        printf("%c", s[i]);
    }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercício 12
#include <stdio.h>
#include <string.h>
#include <ctype.h>
#define IND 100
#define POS 3

void cifra_cesar(char s[IND]);

main(){
    char s[IND];
    int i = 0;
    printf("Digite uma frase: ");
    fgets(s, IND, stdin);
    while(s[i] != '\n'){
        s[i] = toupper(s[i]);
        i++;
    }
    s[i] = '\0';
    cifra_cesar(s);
}

void cifra_cesar(char s[IND]){
    char cifra[IND];
    int i;
    int t;
    t = strlen(s);
    for(i = 0; i < t; i++){
        if(s[i] == ' '){
            cifra[i] = s[i];
        }else{
            if(s[i] + POS <= 90){
                cifra[i] = s[i] + POS;
            }else{
                cifra[i] = s[i] + POS - 26;
            }
        }
    }
    printf("Cifra: %s", cifra);
    return;
}
---------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercício 13
#include <stdio.h>
#include <string.h>
#include <ctype.h>
#define IND 100

void palindromo(char s[IND]);

main(){
    char s[IND];
    int i;
    printf("Digite uma frase: ");
    fgets(s, IND, stdin);
    while (s[i] != '\n'){
        s[i] = toupper(s[i]);
        i++;
    }
    s[i] = '\0';
    palindromo(s);
}

void palindromo(char s[IND]){
    char r[IND];
    int i, j;
    int var;
    for(i = j = 0; s[i] != '\0'; i++){
        if(s[i] >= 65 && s[i] <= 90){
            r[j++] = s[i];
        }
    }
    r[j] = '\0';
    for(i = 0, j = strlen(r) - 1; i < j; i++, j--){
        if(r[i] == r[j]){
            var = 1;
        }
        else{
            var = 0;
            break;
        }
    }
    if(var){
        printf("E um palindromo.");
    }
    else{
        printf("Nao e um palindromo.");
    }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercício 14
#include <stdio.h>
#include <string.h>
#define IND 1000

void contateneN(char str1[IND], char str2[IND], int n);

main(){
    char str1[IND], str2[IND];
    int n;
    printf("Digite a string 1: ");
    fgets(str1, IND, stdin);
    printf("Digite a string 2: ");
    fgets(str2, IND, stdin);
    printf("Digite quantos caracteres vai concatenar: ");
    scanf("%i", &n);
    contateneN(str1, str2, n);
}

void contateneN(char str1[IND], char str2[IND], int n){
    int i, j;
    int t = strlen(str1) + n;
    for(i = strlen(str1) - 1, j = 0; i < t; i++){
        str1[i] = str2[j++];
    }
    str1[i] = '\0';
    printf("A string concatenada fica: %s", str1);
    return;
}
---------------------------------------------------------------------------------------------------------------------------------------------------------
// Exercício 15
#include <stdio.h>
#include <string.h>
#define IND 20

void menu_op();

void menu(char op);

main(){
    char op;
    menu_op();
    printf("Digite uma opcao: ");
    scanf(" %c", &op);
    fflush(stdin);
    menu(op);
}

void menu_op(){
    printf("(a) Ler uma string S1 (tamanho máximo 20 caracteres)\n");
    printf("(b) Imprimir o tamanho da string S1\n");
    printf("(c) Comparar a string S1 com uma nova string S2 fornecida pelo usuario e imprimir o resultado da comparacao\n");
    printf("(d) Concatenar a string S1 com uma nova string S2 e imprimir na tela o resultado da concatenacao\n");
    printf("(e) Imprimir a string S1 de forma reversa\n");
    printf("(f) Contar quantas vezes um dado caractere aparece na string S1. Esse caractere desse ser informado pelo usuario\n");
    printf("(g) Substituir a primeira ocorrencia do caractere C1 da string S1 pelo caractere C2. Os caracteres C1 e C2 serao lidos pelo usuario\n");
    printf("(h) Verificar se uma string S2 e substring de S1. A string S2 deve ser informada pelo usuario\n");
    printf("(i) Retornar uma substring da string S1. Para isso o usuario deve informar a partir de qual posicao deve ser criada a substring e qual e o tamanho da substring\n");
    return;
}

void menu(char op){
    char str1[IND], str2[IND];
    int t, cont = 0;
    char car, car1, car2;
    switch(op){
        case 'a':
        case 'A':
            printf("Digite uma string: ");
            fgets(str1, IND, stdin);
        break;

        case 'b':
        case 'B':
            printf("Digite uma string: ");
            fgets(str1, IND, stdin);
            printf("O tamanho da string e %i", strlen(str1) - 1);
        break;

        case 'c':
        case 'C':
            printf("Digite uma string: ");
            fgets(str1, IND, stdin);
            printf("Digite uma outra string: ");
            fgets(str2, IND, stdin);
            printf("O valor da compacao e %i.", strcmp(str1, str2));
        break;

        case 'd':
        case 'D':
            printf("Digite uma string: ");
            gets(str1);
            printf("Digite uma outra string: ");
            gets(str2);
            printf("%s", strcat( str1, str2));
        break;

        case 'e':
        case 'E':
            printf("Digite uma string: ");
            gets(str1);
            printf("%s", strrev(str1));
        break;

        case 'f':
        case 'F':
            printf("Digite uma string: ");
            fgets(str1, IND, stdin);
            printf("Digite um caracter a ser buscado: ");
            scanf(" %c", &car);
            t = strlen(str1);
            for(int i = 0; i < t; i++){
                if(str1[i] == car)
                    cont++;
            }
            printf("O caracter %c apareceu %i vezes.", car, cont);
        break;

        case 'g':
        case 'G':
            printf("Digite uma string: ");
            fgets(str1, IND, stdin);
            printf("Digite um caracter a ser substituido: ");
            scanf(" %c", &car1);
            printf("Digite um caracter substituto: ");
            scanf(" %c", &car2);
            t = strlen(str1);
            for (int i = 0; i < t; i++){
                if (str1[i] == car1)
                    str1[i] = car2;
            }
            printf("%s", str1);
        break;

        case 'h':
        case 'H':
            printf("Digite uma string: ");
            gets(str1);
            printf("Digite uma outra string: ");
            gets(str2);
            if(strstr(str1, str2)){
                printf("E substring.");
            }else{
                printf("Nao e substring.");
            }
        break;

        case 'i':
        case 'I':
            int comeco, fim;
            printf("Digite uma string: ");
            fgets(str1, IND, stdin);
            printf("Digite onde o segmento comeca e termina: ");
            scanf("%i %i", &comeco, &fim);
            for (int i = comeco; i <= fim; i++){
                printf("%c", str1[i]);
            }
        break;
    }
    return;
}
---------------------------------------------------------------------------------------------------------------------------------------------------------
// Extra
#include <stdio.h>
#include <string.h>
#define IND 1000

void dislalia(char s[IND]);

main(){
    char s[IND];
    printf("Digite uma frase: ");
    fgets(s, IND, stdin);
    dislalia(s);
}

void dislalia(char s[IND]){
    int t = strlen(s), cont = 1;
    int i, j = 0;
    char c, p[IND];
    s = strlwr(s);
    for(i = 0; i < t; i++){
        if(s[i] == 'r' && s[i + 1] == 'r'){
            c = 'l';
            i++;
        }
        else if (s[i] == 'r' && s[i + 1] >= 97 && s[i + 1] <= 122){
            c = 'l';
        }else{
            c = s[i];
        }
        p[j++] = c;
    }
    p[j] = '\0';
    printf("%s", p);
}




